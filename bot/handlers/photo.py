import requests
import aiohttp
from aiogram import Router, types, F
from aiogram.types import URLInputFile
from config import DJANGO_SERVER
from keyboards import main_keyboard
import logging
from utils import is_user_allowed

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

router = Router()


@router.message(F.text == "üì∏ –°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ")
async def take_photo(message: types.Message):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}")

    if not is_user_allowed(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    try:
        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Django...")
        response = requests.post(f"{DJANGO_SERVER}/camera/photo/")
        logger.debug(f"–û—Ç–≤–µ—Ç –æ—Ç Django-—Å–µ—Ä–≤–µ—Ä–∞: {response.status_code} {response.text}")

        if response.status_code == 200:
            data = response.json()
            logger.debug(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")

            if data.get("status") == "success" and "photo_url" in data:
                photo_url = data["photo_url"]
                logger.info(f"–ü–æ–ª—É—á–µ–Ω URL —Ñ–æ—Ç–æ: {photo_url}")

                photo = URLInputFile(photo_url)
                await message.answer_photo(photo=photo, caption="üì∏ –í–∞—à–µ —Ñ–æ—Ç–æ")
            else:
                error_message = data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Django: {error_message}")
                await message.answer(f"–û—à–∏–±–∫–∞: {error_message}")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç Django: {response.status_code}")
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ Django.")
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        await message.answer(f"–û—à–∏–±–∫–∞: {e}", reply_markup=main_keyboard)
